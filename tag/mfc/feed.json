{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"mfc\" tag",
    "description": "",
    "home_page_url": "https://adventure-yx.github.io",
    "items": [
        {
            "id": "https://adventure-yx.github.io/2023/05/25/MFC%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6/",
            "url": "https://adventure-yx.github.io/2023/05/25/MFC%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6/",
            "title": "MFC 应用程序框架",
            "date_published": "2023-05-25T02:12:08.000Z",
            "content_html": "<h1 id=\"vs应用程序工程中文件的组成结构\"><a class=\"markdownIt-Anchor\" href=\"#vs应用程序工程中文件的组成结构\">#</a> VS 应用程序工程中文件的组成结构</h1>\n<p>如果已经以 Debug 方式编译链接过程序，则会在解决方案文件夹下和工程子文件夹下各有一个名为 “Debug” 的文件夹，而如果是 Release 方式编译则会有名为 “Release” 的文件夹。这两种编译方式将产生两种不同版本的可执行文件：</p>\n<ul>\n<li>\n<p>Debug 版本</p>\n<p>可执行文件中包含了用于调试的信息和代码。</p>\n</li>\n<li>\n<p>Release 版本</p>\n<p>没有调试信息，不能进行调试，但可执行文件较小。</p>\n</li>\n</ul>\n<p>工程中文件结构：</p>\n<ol>\n<li>\n<p>解决方案相关文件</p>\n<p>包括解决方案文件夹下的.sdf 文件、.sln 文件、.suo 文件和 ipch 文件夹。</p>\n<p>.sdf 文件和 ipch 目录一般与智能提示、错误提示、代码恢复和团队本地仓库有关。</p>\n<p>.sln 文件和.suo 文件为 MFC 自动生成的解决方案文件，它包含当前解决方案中的工程信息，存储解决方案的设置。</p>\n</li>\n<li>\n<p>工程相关文件</p>\n<p>包括工程文件夹下的.vcxproj 文件和.vcxproj.filters 文件。</p>\n<p>.vcxproj 文件是 MFC 生成的工程文件，它包含当前工程的设置和工程所包含的文件等信息。</p>\n<p>.vcxproj.filters 文件存放工程的虚拟目录信息，也就是在解决方案浏览器中的目录结构信息。</p>\n</li>\n<li>\n<p>应用程序头文件和源文件</p>\n<p>应用程序向导（MFC Application Wizard）会根据应用程序的类型（单文档、多文档或基于对话框的程序）自动生成一些头文件和源文件，这些文件是工程的主体部分，用于实现主框架、文档、视图等。</p>\n<ul>\n<li>HelloWorld.h：应用程序的主头文件。主要包含由 CWinAppEx 类派生的 CHelloWorldApp 类的声明，以及 CHelloWorldApp 类的全局对象 theApp 的声明。</li>\n<li>HelloWorld.cpp：应用程序的主源文件。主要包含 CHelloWorldApp 类的实现，CHelloWorldApp 类的全局对象 theApp 的声明。</li>\n<li>MainFrm.h 和 MainFrm.cpp：从 CFrameWndEx 类派生出 CMainFrame 类，用于创建主框架、菜单栏、工具栏、状态栏等。</li>\n<li>HelloWorldDoc.h 和 HelloWorldDoc.cpp：从 CDocument 类派生出 CHelloWorldDoc 文档类，包含一些用来初始化文档、串行化（保存和装入）文档和调试的成员函数。</li>\n<li>HelloWorldView.h 和 HelloWorldView.cpp：从 CView 类派生出 CHelloWorldView 视图类，用来显示和打印文档数据，包含了一些绘图和用于调试的成员函数。</li>\n<li>ClassView.h 和 ClassView.cpp：从 CDockablePane 类派生出 CClassView 类，用于实现应用程序左侧面板的 Class View。</li>\n<li>FlieView.h 和 FlieView.cpp：从 CDockablePane 类派生出 CFlieView 类，用于实现应用程序左侧面板的 Flie View。</li>\n<li>OutputWnd.h 和 OutputWnd.cpp：从 CDockablePane 类派生出 COutputWnd 类，用于实现应用程序下侧面板的 Output。</li>\n<li>PropertiesWnd.h 和 PropertiesWnd.cpp：从 CDockablePane 类派生出 CPropertiesWnd 类，用于实现应用程序右侧面板的 Properties。</li>\n<li>ViewTree.h 和 ViewTree.cpp：由 CTreeCtrl 类派生出 CViewTree 类，用于实现出现在 ClassView 和 FileView 中的树视图。</li>\n</ul>\n</li>\n<li>\n<p>资源文件</p>\n<p>一般使用 MFC 生成窗口程序都会有对话框、图标、菜单等资源，应用程序向导会生成资源相关文件：res 目录、HelloWorld.rc 文件和 Resource.h 文件。</p>\n<ul>\n<li>res 目录：工程文件夹下的 res 目录中含有应用程序默认图标、工具栏使用图标等图标文件。</li>\n<li>HelloWorld.rc：包含默认菜单定义、字符串表和加速键表，制定了默认的 About 对话框和应用程序默认图标文件等。</li>\n<li>Resource.h：含有各种资源的 ID 定义。</li>\n</ul>\n</li>\n<li>\n<p>预编译头文件</p>\n<p>几乎所有 MFC 程序的文件都要包含 afxwin.h 等文件（外部依赖项），如果每次都编译一次则会大大减慢编译速度。所以把常用的 MFC 头文件都放到了 stdafx.h 中，然后由 stdafx.cpp 包含 stdafx.h 文件，编译器对 stdafx.cpp 只编译一次，并生成编译后的预编译头 HelloWorld.pch（Precomplied Header Flie），大大提高了编译效率。</p>\n</li>\n<li>\n<p>编译链接生成的文件</p>\n<p>工程文件夹下的 Debug 和 Release 子文件夹中包含了编译链接时产生的中间文件。</p>\n<p>解决方案文件夹下的 Debug 和 Release 子文件夹中主要包含有应用程序的可执行文件。</p>\n</li>\n</ol>\n<hr>\n<h1 id=\"mfc应用程序框架分析\"><a class=\"markdownIt-Anchor\" href=\"#mfc应用程序框架分析\">#</a> MFC 应用程序框架分析</h1>\n<p>程序运行都有入口函数，Windows 应用程序的入口函数时 WinMain 函数，MFC 程序也是从 WinMain 函数开始的。</p>\n<ul>\n<li>MFC 应用程序，使用 MFC 库，应用程序框架开发。</li>\n<li>SDK 应用程序，不使用 MFC 库，直接用 Windows API 函数进行软件开发。</li>\n</ul>\n<h1 id=\"sdk应用程序\"><a class=\"markdownIt-Anchor\" href=\"#sdk应用程序\">#</a> SDK 应用程序</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span>    </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">myWndProc</span><span class=\"token punctuation\">(</span>HWND hWindow<span class=\"token punctuation\">,</span> UINT msg<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> WINAPI <span class=\"token function\">WinMain</span><span class=\"token punctuation\">(</span>HINSTANCE hInstance<span class=\"token punctuation\">,</span> HINSTANCE hPrevInstance<span class=\"token punctuation\">,</span> PSTR szCmdLine<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> iCmdShow<span class=\"token punctuation\">)</span>      </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span>      </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token keyword\">static</span> TCHAR appName<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  WNDCLASSEX myWin<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>cbSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>myWin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>style <span class=\"token operator\">=</span> CS_HREDRAW <span class=\"token operator\">|</span> CS_VREDRAW<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>lpfnWndProc <span class=\"token operator\">=</span> myWndProc<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>cbClsExtra <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>cbWndExtra <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>hInstance <span class=\"token operator\">=</span> hInstance<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>hIcon <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>hIconSm  <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>hCursor <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>hbrBackground <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>COLOR_WINDOW <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>lpszMenuName <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  myWin<span class=\"token punctuation\">.</span>lpszClassName <span class=\"token operator\">=</span> appName<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">//Register      </span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">RegisterClassEx</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>myWin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">const</span> HWND hWindow <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span>      </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    appName<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    appName<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    WS_OVERLAPPEDWINDOW<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    CW_USEDEFAULT<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    CW_USEDEFAULT<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    CW_USEDEFAULT<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    CW_USEDEFAULT<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    hInstance<span class=\"token punctuation\">,</span>      </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>hWindow<span class=\"token punctuation\">,</span>iCmdShow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token function\">UpdateWindow</span><span class=\"token punctuation\">(</span>hWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span>      </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    MSG msg<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>      </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>      </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>      </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>msg<span class=\"token punctuation\">.</span>wParam<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span>      </pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span>      </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">myWndProc</span><span class=\"token punctuation\">(</span>HWND hWindow<span class=\"token punctuation\">,</span> UINT msg<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span>      </pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#123;</span>      </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token operator\">==</span>WM_PAINT<span class=\"token punctuation\">)</span>      </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span>      </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    PAINTSTRUCT ps<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">const</span> HDC hDC <span class=\"token operator\">=</span> <span class=\"token function\">BeginPaint</span><span class=\"token punctuation\">(</span>hWindow<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    RECT rect<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token function\">GetClientRect</span><span class=\"token punctuation\">(</span>hWindow<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token function\">DrawText</span><span class=\"token punctuation\">(</span>hDC<span class=\"token punctuation\">,</span><span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HELLO WORLD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>rect<span class=\"token punctuation\">,</span> DT_SINGLELINE <span class=\"token operator\">|</span> DT_CENTER <span class=\"token operator\">|</span> DT_VCENTER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token function\">EndPaint</span><span class=\"token punctuation\">(</span>hWindow<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span>      </pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token operator\">==</span>WM_DESTROY<span class=\"token punctuation\">)</span>      </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span>      </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token function\">PostQuitMessage</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span>      </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hWindow<span class=\"token punctuation\">,</span>msg<span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"程序运行流程\"><a class=\"markdownIt-Anchor\" href=\"#程序运行流程\">#</a> 程序运行流程</h2>\n<ol>\n<li>进入 WinMain 函数</li>\n<li>初始化 WNDCLASSEX，调用 RegisterClassEx 函数注册窗口类</li>\n<li>调用 ShowWindow 和 UpdateWindow 函数显示并更新窗口</li>\n<li>进入消息循环</li>\n</ol>\n<blockquote>\n<p>关于消息循环</p>\n<p>Windows 应用程序是消息驱动的，系统或用户让应用程序进行某项操作或完成某个任务时会发送消息，进入程序的消息队列，然后消息循环会将消息队列中的消息取出，交予相应的窗口过程处理。</p>\n<p>此程序的窗口过程函数就是 myWndProc 函数，窗口过程函数处理完消息就完成了某项操作或任务。本例是要显示 “HELLO WORLD” 字符串，UpdateWindow 函数会发送 WM_PAINT 消息，但是此消息不经过消息队列而是直接送到窗口过程处理，在窗口过程函数中最终绘制了 “HELLO WORLD” 字符串。</p>\n</blockquote>\n<h1 id=\"mfc应用程序\"><a class=\"markdownIt-Anchor\" href=\"#mfc应用程序\">#</a> MFC 应用程序</h1>\n<p>下面是 MFC 应用程序的运行流程，通过 MFC 库中代码进行分析：</p>\n<p>首先在 HelloWorld.cpp 中定义全局对象 theApp： <code>CHelloWorldApp theApp;</code> 。调用 CWinApp 和 CHelloWorldApp 的构造函数后，进入 WinMain 函数（位于 appmodul.cpp 中）。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token keyword\">int</span> WINAPI   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">_tWinMain</span><span class=\"token punctuation\">(</span>HINSTANCE hInstance<span class=\"token punctuation\">,</span> HINSTANCE hPrevInstance<span class=\"token punctuation\">,</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    _In_ LPTSTR lpCmdLine<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nCmdShow<span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>suppress<span class=\"token operator\">:</span> <span class=\"token number\">4985</span><span class=\"token punctuation\">)</span>   </span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// call shared/exported WinMain   </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">AfxWinMain</span><span class=\"token punctuation\">(</span>hInstance<span class=\"token punctuation\">,</span> hPrevInstance<span class=\"token punctuation\">,</span> lpCmdLine<span class=\"token punctuation\">,</span> nCmdShow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 <code>TCHAR.h</code>  中，有此定义： <code>#define _tWinMain  WinMain</code> ，所以这里的 <code>_tWinMain</code>  就是 <code>WinMain</code>  函数。它调用了 <code>AfxWinMain</code>  函数（位于 <code>WinMain.cpp</code>  中）。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>pp</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> AFXAPI <span class=\"token function\">AfxWinMain</span><span class=\"token punctuation\">(</span>HINSTANCE hInstance<span class=\"token punctuation\">,</span> HINSTANCE hPrevInstance<span class=\"token punctuation\">,</span>LPTSTR lpCmdLine<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nCmdShow<span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>略   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token comment\">// App global initializations (rare)   </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pApp <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pApp<span class=\"token operator\">-></span><span class=\"token function\">InitApplication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>              <span class=\"token keyword\">goto</span> InitFailure<span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pThread<span class=\"token operator\">-></span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>              <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>略   </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token comment\">// Run 函数位于 THRDCORE.cpp 中，由此函数进入消息循环   </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       nReturnCode <span class=\"token operator\">=</span> pThread<span class=\"token operator\">-></span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>略   </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       <span class=\"token keyword\">return</span> nReturnCode<span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上面 InitInstance 函数的代码如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>BOOL <span class=\"token class-name\">CTestApp</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span>       </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>略       </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       CSingleDocTemplate<span class=\"token operator\">*</span> pDocTemplate<span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       pDocTemplate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">CSingleDocTemplate</span><span class=\"token punctuation\">(</span>       </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>              IDR_MAINFRAME<span class=\"token punctuation\">,</span>       </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>              <span class=\"token function\">RUNTIME_CLASS</span><span class=\"token punctuation\">(</span>CTestDoc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>       </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>              <span class=\"token function\">RUNTIME_CLASS</span><span class=\"token punctuation\">(</span>CMainFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>      <span class=\"token comment\">// main SDI frame window       </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>              <span class=\"token function\">RUNTIME_CLASS</span><span class=\"token punctuation\">(</span>CTestView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pDocTemplate<span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>             <span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       <span class=\"token function\">AddDocTemplate</span><span class=\"token punctuation\">(</span>pDocTemplate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token comment\">// Parse command line for standard shell commands, DDE, file open       </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       CCommandLineInfo cmdInfo<span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       <span class=\"token function\">ParseCommandLine</span><span class=\"token punctuation\">(</span>cmdInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       <span class=\"token comment\">//ProcessShellCommand 位于 AppUI2.cpp 中，注册并创建窗口       </span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ProcessShellCommand</span><span class=\"token punctuation\">(</span>cmdInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>       </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>             <span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>       m_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>SW_SHOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>       m_pMainWnd<span class=\"token operator\">-></span><span class=\"token function\">UpdateWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>       <span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>InitInstance</code>  中的 <code>ProcessShellCommand</code>  函数又调用了 <code>CMainFrame</code>  的 <code>LoadFrame</code>  函数注册并创建了窗口，执行完 <code>ProcessShellCommand</code>  函数以后，调用了 <code>m_pMainWnd</code>  的 <code>ShowWindow</code>  和 <code>UpdateWindow</code>  函数显示并更新框架窗口。这些与上面的 SDK 程序十分类似</p>\n<p>接下来该是消息循环了，上面的 <code>AfxWinMain</code>  函数中调用了 <code>pThread</code>  的 <code>Run</code>  函数（位于 <code>THRDCORE.cpp</code>  中），在 Run 中包含了消息循环。Run 函数的代码如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token class-name\">CWinThread</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>       </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span>       </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>略       </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// phase2: pump messages while available       </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">do</span>      </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span>       </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>              <span class=\"token comment\">// pump message, but quit on WM_QUIT       </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">PumpMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>       </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                     <span class=\"token keyword\">return</span> <span class=\"token function\">ExitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>              <span class=\"token comment\">// reset \"no idle\" state after pumping \"normal\" message       </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IsIdleMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>m_msgCur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>       </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>              <span class=\"token punctuation\">&#123;</span>       </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                     bIdle <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                     lIdleCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span>       </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PeekMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>m_msgCur<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> PM_NOREMOVE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>略       </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span>       </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>BOOL <span class=\"token class-name\">CWinThread</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PumpMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>       </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#123;</span>     </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>       <span class=\"token keyword\">return</span> <span class=\"token function\">AfxInternalPumpMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>BOOL AFXAPI <span class=\"token function\">AfxInternalPumpMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>       _AFX_THREAD_STATE <span class=\"token operator\">*</span>pState <span class=\"token operator\">=</span> <span class=\"token function\">AfxGetThreadState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>pState<span class=\"token operator\">-></span>m_msgCur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>          </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>       <span class=\"token punctuation\">&#123;</span>       </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>             <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>略       </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span>       </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>略       </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pState<span class=\"token operator\">-></span>m_msgCur<span class=\"token punctuation\">.</span>message <span class=\"token operator\">!=</span> WM_KICKIDLE <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">AfxPreTranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>pState<span class=\"token operator\">-></span>m_msgCur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>       <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>             <span class=\"token double-colon punctuation\">::</span><span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>pState<span class=\"token operator\">-></span>m_msgCur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>             <span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>pState<span class=\"token operator\">-></span>m_msgCur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span>     </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>       <span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span>       </pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们看到 <code>PumpMessage</code>  中通过调用 <code>GetMessage</code> 、 <code>TranslateMessage</code> 、 <code>DispatchMessage</code>  等建立了消息循环并投递消息。</p>\n<p>窗口过程函数 <code>AfxWinProc</code>  形式如下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LRESULT CALLBACK <span class=\"token function\">AfxWndProc</span><span class=\"token punctuation\">(</span>HWND hWnd<span class=\"token punctuation\">,</span>UINT nMsg<span class=\"token punctuation\">,</span>WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      ……   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      CWnd<span class=\"token operator\">*</span>pWnd<span class=\"token operator\">=</span><span class=\"token class-name\">CWnd</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FromHandlePermanent</span><span class=\"token punctuation\">(</span>hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token function\">ReturnAfxCallWndProc</span><span class=\"token punctuation\">(</span>pWnd<span class=\"token punctuation\">,</span>hWnd<span class=\"token punctuation\">,</span>nMsg<span class=\"token punctuation\">,</span>wParam<span class=\"token punctuation\">,</span>lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"sdk应用程序和mfc应用程序对比\"><a class=\"markdownIt-Anchor\" href=\"#sdk应用程序和mfc应用程序对比\">#</a> SDK 应用程序和 MFC 应用程序对比</h1>\n<p>运行流程是类似的，都是<strong>先进行初始化过程，再注册并创建窗口，然后显示、更新窗口，最后进入消息循环，消息都由窗口过程函数处理。</strong></p>\n<h1 id=\"mfc应用程序框架主要类之间的关系\"><a class=\"markdownIt-Anchor\" href=\"#mfc应用程序框架主要类之间的关系\">#</a> MFC 应用程序框架主要类之间的关系</h1>\n<p>自动生成的框架中比较重要的类包括：CHelloWorldApp、CMainFrame、CHelloWorldDoc 和 CHelloWorldView</p>\n<ul>\n<li><code>CHelloWorldApp</code>  类处理消息，将收到的消息分发给相应的对象。</li>\n<li><code>CMainFrame</code>  类是视图类 <code>CHelloWorldView</code>  的父窗口，CHelloWorldView 就显示在 <code>CMainFrame</code>  的客户区中。</li>\n<li>视图类 <code>CHelloWorldView</code>  用来显示文档类 <code>CHelloWorldDoc</code>  中的数据，并根据对视图类的操作修改文档类的数据。一个视图类只能跟一个文档类相联系，而一个文档类可以跟多个视图类相联系。</li>\n</ul>\n",
            "tags": [
                "C++",
                "MFC"
            ]
        }
    ]
}